definitions:
  entities.Author:
    properties:
      author_id:
        items:
          $ref: '#/definitions/entities.Book'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  entities.Book:
    properties:
      author:
        $ref: '#/definitions/entities.Author'
      author_id:
        type: integer
      categories:
        items:
          $ref: '#/definitions/entities.Category'
        type: array
      description:
        type: string
      edition:
        type: integer
      id:
        type: integer
      image_url:
        type: string
      isbn:
        description: Export a field by starting it with an uppercase letter.
        type: string
      language:
        type: string
      name:
        type: string
      published_date:
        type: string
      publishers:
        items:
          $ref: '#/definitions/entities.Publisher'
        type: array
      reader:
        $ref: '#/definitions/entities.Reader'
      reader_id:
        type: integer
      total_pages:
        type: integer
    type: object
  entities.Category:
    properties:
      books:
        items:
          $ref: '#/definitions/entities.Book'
        type: array
      category_name:
        type: string
      id:
        type: integer
    type: object
  entities.Publisher:
    properties:
      books:
        items:
          $ref: '#/definitions/entities.Book'
        type: array
      id:
        type: integer
      publisher_name:
        type: string
    type: object
  entities.Reader:
    properties:
      books:
        items:
          $ref: '#/definitions/entities.Book'
        type: array
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /authors:
    get:
      description: Responds with the list of all authors as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Author'
      summary: Get authors array
      tags:
      - authors
    post:
      description: Takes a author JSON and store in DB. Return saved JSON.
      parameters:
      - description: Author JSON
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/entities.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Author'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Add a new author
      tags:
      - authors
    put:
      description: Takes a author JSON and edit an in DB. Return saved JSON.
      parameters:
      - description: Author JSON
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/entities.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Author'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Edit an author
      tags:
      - authors
  /authors/{id}:
    delete:
      description: Remove an author from DB by id.
      parameters:
      - description: delete author by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Author'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Delete an author
      tags:
      - authors
    get:
      description: Returns the author whose id value matches the id.
      parameters:
      - description: search author by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Author'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Get single author by id
      tags:
      - authors
  /books:
    get:
      description: Responds with the list of all books as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
      summary: Get books array
      tags:
      - books
    post:
      description: Takes a book JSON and store in DB. Return saved JSON.
      parameters:
      - description: Book JSON
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Add a new book
      tags:
      - books
    put:
      description: Takes a book JSON and edit an in DB. Return saved JSON.
      parameters:
      - description: Book JSON
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/entities.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Edit an book
      tags:
      - books
  /books/{id}:
    delete:
      description: Remove an book from DB by id.
      parameters:
      - description: delete book by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Delete an book
      tags:
      - books
    get:
      description: Returns the book whose id value matches the id.
      parameters:
      - description: search book by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Book'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Get single book by id
      tags:
      - books
  /categories:
    get:
      description: Responds with the list of all categories as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
      summary: Get categories array
      tags:
      - categories
    post:
      description: Takes a category JSON and store in DB. Return saved JSON.
      parameters:
      - description: Category JSON
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/entities.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Add a new category
      tags:
      - categories
    put:
      description: Takes a category JSON and edit an in DB. Return saved JSON.
      parameters:
      - description: Category JSON
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/entities.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Edit an category
      tags:
      - categories
  /categories/{id}:
    delete:
      description: Remove an category from DB by id.
      parameters:
      - description: delete category by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Delete an category
      tags:
      - categories
    get:
      description: Returns the category whose id value matches the id.
      parameters:
      - description: search category by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Get single category by id
      tags:
      - categories
  /publishers:
    get:
      description: Responds with the list of all publishers as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Publisher'
      summary: Get publishers array
      tags:
      - publishers
    post:
      description: Takes a publisher JSON and store in DB. Return saved JSON.
      parameters:
      - description: Publisher JSON
        in: body
        name: publisher
        required: true
        schema:
          $ref: '#/definitions/entities.Publisher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Publisher'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Add a new publisher
      tags:
      - publishers
    put:
      description: Takes a publisher JSON and edit an in DB. Return saved JSON.
      parameters:
      - description: Publisher JSON
        in: body
        name: publisher
        required: true
        schema:
          $ref: '#/definitions/entities.Publisher'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Publisher'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Edit an publisher
      tags:
      - publishers
  /publishers/{id}:
    delete:
      description: Remove an publisher from DB by id.
      parameters:
      - description: delete publisher by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Publisher'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Delete an publisher
      tags:
      - publishers
    get:
      description: Returns the publisher whose id value matches the id.
      parameters:
      - description: search publisher by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Publisher'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Get single publisher by id
      tags:
      - publishers
  /readers:
    get:
      description: Responds with the list of all readers as JSON.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Reader'
      summary: Get readers array
      tags:
      - readers
    post:
      description: Takes a reader JSON and store in DB. Return saved JSON.
      parameters:
      - description: Reader JSON
        in: body
        name: reader
        required: true
        schema:
          $ref: '#/definitions/entities.Reader'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Reader'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Add a new reader
      tags:
      - readers
    put:
      description: Takes a reader JSON and edit an in DB. Return saved JSON.
      parameters:
      - description: Reader JSON
        in: body
        name: reader
        required: true
        schema:
          $ref: '#/definitions/entities.Reader'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Reader'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Edit an reader
      tags:
      - readers
  /readers/{id}:
    delete:
      description: Remove an reader from DB by id.
      parameters:
      - description: delete reader by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Reader'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Delete an reader
      tags:
      - readers
    get:
      description: Returns the reader whose id value matches the id.
      parameters:
      - description: search reader by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Reader'
        "400":
          description: Bad Request
          schema:
            type: error
        "406":
          description: Not Acceptable
          schema:
            type: error
      summary: Get single reader by id
      tags:
      - readers
swagger: "2.0"
